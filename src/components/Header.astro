---
---

<header class="sticky top-0 z-50 bg-white dark:bg-brand-navy/95 backdrop-blur-sm border-b border-brand-orange/10 dark:border-brand-yellow/10 shadow-sm">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <a href="/" class="flex items-center group">
        <!-- Icon Logo (visible on mobile) -->
        <div class="flex md:hidden">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 150" class="h-10 w-20">
            <!-- Orange circle with gecko -->
            <circle cx="60" cy="75" r="60" fill="#1E1B4B"/>
            <circle cx="60" cy="75" r="48" fill="#F97316"/>
            <g transform="translate(45, 60) scale(0.6)">
              <ellipse cx="25" cy="25" rx="20" ry="30" fill="#1E1B4B"/>
              <circle cx="18" cy="8" r="7" fill="#1E1B4B"/>
              <circle cx="32" cy="8" r="7" fill="#1E1B4B"/>
              <circle cx="38" cy="25" r="7" fill="#1E1B4B"/>
              <circle cx="12" cy="25" r="7" fill="#1E1B4B"/>
              <circle cx="25" cy="42" r="7" fill="#1E1B4B"/>
            </g>
            <!-- Yellow circle with roo -->
            <circle cx="180" cy="75" r="60" fill="#1E1B4B"/>
            <circle cx="180" cy="75" r="48" fill="#FFD700"/>
            <g transform="translate(160, 55) scale(0.9)">
              <ellipse cx="25" cy="25" rx="18" ry="22" fill="#1E1B4B"/>
              <ellipse cx="25" cy="12" rx="10" ry="13" fill="#1E1B4B"/>
              <path d="M 33 25 Q 40 28 38 38" fill="none" stroke="#1E1B4B" stroke-width="6" stroke-linecap="round"/>
              <ellipse cx="20" cy="8" rx="6" ry="10" fill="#1E1B4B" transform="rotate(-30 20 8)"/>
            </g>
          </svg>
        </div>

        <!-- Full Text Logo (visible on desktop) -->
        <div class="hidden md:flex items-center">
          <!-- Icon -->
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 150" class="h-10 w-20 mr-3">
            <!-- Orange circle with gecko -->
            <circle cx="60" cy="75" r="60" fill="#1E1B4B"/>
            <circle cx="60" cy="75" r="48" fill="#F97316"/>
            <g transform="translate(45, 60) scale(0.6)">
              <ellipse cx="25" cy="25" rx="20" ry="30" fill="#1E1B4B"/>
              <circle cx="18" cy="8" r="7" fill="#1E1B4B"/>
              <circle cx="32" cy="8" r="7" fill="#1E1B4B"/>
              <circle cx="38" cy="25" r="7" fill="#1E1B4B"/>
              <circle cx="12" cy="25" r="7" fill="#1E1B4B"/>
              <circle cx="25" cy="42" r="7" fill="#1E1B4B"/>
            </g>
            <!-- Yellow circle with roo -->
            <circle cx="180" cy="75" r="60" fill="#1E1B4B"/>
            <circle cx="180" cy="75" r="48" fill="#FFD700"/>
            <g transform="translate(160, 55) scale(0.9)">
              <ellipse cx="25" cy="25" rx="18" ry="22" fill="#1E1B4B"/>
              <ellipse cx="25" cy="12" rx="10" ry="13" fill="#1E1B4B"/>
              <path d="M 33 25 Q 40 28 38 38" fill="none" stroke="#1E1B4B" stroke-width="6" stroke-linecap="round"/>
              <ellipse cx="20" cy="8" rx="6" ry="10" fill="#1E1B4B" transform="rotate(-30 20 8)"/>
            </g>
          </svg>

          <!-- Text -->
          <div class="flex items-baseline">
            <span class="text-2xl font-heading font-bold text-brand-orange">Gecko</span>
            <span class="text-2xl font-heading font-bold text-brand-yellow">Roo</span>
          </div>
        </div>
      </a>

      <!-- Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        <a href="/" class="text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow transition-colors relative group">
          <span>Home</span>
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-brand-orange dark:bg-brand-yellow group-hover:w-full transition-all"></span>
        </a>
        <a href="/picks" class="text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow transition-colors relative group">
          <span>All Picks</span>
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-brand-orange dark:bg-brand-yellow group-hover:w-full transition-all"></span>
        </a>
        <a href="/about" class="text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow transition-colors relative group">
          <span>About</span>
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-brand-orange dark:bg-brand-yellow group-hover:w-full transition-all"></span>
        </a>
      </nav>

      <!-- Right side -->
      <div class="flex items-center space-x-4">
        <!-- Search trigger -->
        <button
          id="search-trigger"
          class="p-2 text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow transition-colors"
          aria-label="Search">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </button>

        <!-- Dark mode toggle -->
        <button
          id="theme-toggle"
          class="p-2 text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow transition-colors"
          aria-label="Toggle dark mode">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 block dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
        </button>

        <!-- Mobile menu toggle -->
        <button
          id="mobile-menu-toggle"
          class="md:hidden p-2 text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow"
          aria-label="Toggle menu">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <nav id="mobile-menu" class="hidden md:hidden pb-4 border-t border-brand-orange/10 dark:border-brand-yellow/10 mt-2">
      <a href="/" class="block py-2 text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow">Home</a>
      <a href="/picks" class="block py-2 text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow">All Picks</a>
      <a href="/about" class="block py-2 text-brand-navy dark:text-brand-sand hover:text-brand-orange dark:hover:text-brand-yellow">About</a>
    </nav>
  </div>

  <!-- Search modal -->
  <div id="search-modal" class="hidden fixed inset-0 z-50 bg-brand-navy/50 dark:bg-black/50" style="margin-top: 0;">
    <div class="bg-white dark:bg-brand-navy p-4 shadow-xl border-b border-brand-orange/20">
      <div class="container mx-auto max-w-2xl">
        <div id="search"></div>
        <button id="search-close" class="mt-4 text-sm text-brand-navy/60 hover:text-brand-orange dark:text-brand-sand/60 dark:hover:text-brand-yellow">
          Press ESC to close
        </button>
      </div>
    </div>
  </div>
</header>

<script>
  // Theme toggle
  const themeToggle = document.getElementById('theme-toggle');
  themeToggle?.addEventListener('click', () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  });

  // Mobile menu toggle
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuToggle?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Search modal
  const searchTrigger = document.getElementById('search-trigger');
  const searchModal = document.getElementById('search-modal');
  const searchClose = document.getElementById('search-close');

  searchTrigger?.addEventListener('click', async () => {
    searchModal?.classList.remove('hidden');

    // Dynamically load and initialize Pagefind UI if it exists
    try {
      // Check if Pagefind files exist
      const response = await fetch('/_pagefind/pagefind-ui.js', { method: 'HEAD' });
      if (response.ok) {
        // Load CSS
        if (!document.querySelector('link[href="/_pagefind/pagefind-ui.css"]')) {
          const link = document.createElement('link');
          link.rel = 'stylesheet';
          link.href = '/_pagefind/pagefind-ui.css';
          document.head.appendChild(link);
        }

        // Load JS and initialize
        if (!window.PagefindUI) {
          const script = document.createElement('script');
          script.src = '/_pagefind/pagefind-ui.js';
          script.onload = () => {
            new window.PagefindUI({ element: "#search" });
          };
          document.body.appendChild(script);
        } else {
          new window.PagefindUI({ element: "#search" });
        }
      } else {
        // Pagefind not available (dev mode or not built yet)
        document.getElementById('search').innerHTML = '<p class="text-brand-navy/60 dark:text-brand-sand/60 p-4">Search is only available in production build.</p>';
      }
    } catch (error) {
      console.log('Pagefind not available');
      document.getElementById('search').innerHTML = '<p class="text-brand-navy/60 dark:text-brand-sand/60 p-4">Search is only available in production build.</p>';
    }
  });

  searchClose?.addEventListener('click', () => {
    searchModal?.classList.add('hidden');
  });

  // Close on ESC
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      searchModal?.classList.add('hidden');
    }
  });
</script>